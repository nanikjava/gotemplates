name: build
on:
  push:
    branches:
      - main
jobs:
  cross_compile:
    strategy:
      # ATTENTION: the list of architectures must be in sync with helpers/build-release-binaries/main.go!
      matrix:
        # run cross-compile in two batches parallel so the overall tests run faster
        targets:
          - "darwin/amd64 darwin/arm64 linux/amd64"

    env:
      go: 1.16.x
      GOPROXY: https://proxy.golang.org

    runs-on: ubuntu-latest

    name: Cross Compile for ${{ matrix.targets }}

    steps:
      - name: Set up Go ${{ env.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install gox
        run: |
          go get github.com/mitchellh/gox

      - name: Cross-compile with gox for ${{ matrix.targets }}
        env:
          GOFLAGS: "-trimpath"
          GOX_ARCHS: "${{ matrix.targets }}"
        run: |
          mkdir build-output
          gox -parallel 2 -verbose -osarch "$GOX_ARCHS" -output "build-output/{{.Dir}}_{{.OS}}_{{.Arch}}" .
          gox -parallel 2 -verbose -osarch "$GOX_ARCHS" -tags debug -output "build-output/{{.Dir}}_{{.OS}}_{{.Arch}}_debug" .

  lint:
    name: lint
    runs-on: ubuntu-latest
    env:
      go: 1.16.x
    steps:
      - name: Set up Go ${{ env.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.36
          only-new-issues: true
          args: --verbose --timeout 5m
          skip-go-installation: true

        if: github.event_name == 'pull_request'
